name: "Test"

on:
  workflow_call:

env:
  GIT_CONFIG_GLOBAL: "/root/.gitconfig" # fix path in container (https://github.com/actions/runner/issues/2033)

jobs:

  ### LINT ###

  lint:
    runs-on: "ubuntu-latest"
    container:
      image: "ghcr.io/tarantool/sdvg-ci:0.0.2"
    steps:
      - uses: "actions/checkout@v4"

      - name: "Run linter"
        run: "golangci-lint run --print-issued-lines=false --out-format code-climate:lint.json,line-number --timeout 5m"

      - uses: "actions/upload-artifact@v4"
        with:
          name: "codequality"
          path: "lint.json"

  ### UNIT ###

  unit:
    runs-on: "ubuntu-latest"
    container:
      image: "ghcr.io/tarantool/sdvg-ci:0.0.2"
    steps:
      - uses: "actions/checkout@v4"

      - name: "Run unit tests"
        run: "make test/unit"

  ### COVER ###

  cover:
    runs-on: "ubuntu-latest"
    container:
      image: "ghcr.io/tarantool/sdvg-ci:0.0.2"
    steps:
      - uses: "actions/checkout@v4"

      - name: "Measuring test coverage"
        run: "make test/cover"

      - name: "Upload coverage to Coveralls"
        uses: "coverallsapp/github-action@v2"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: "coverage.out"
          format: "golang"

  ### PERFORMANCE ###

  performance:
    if: ${{ github.event_name == 'pull_request' }}
    uses: "./.github/workflows/perf-compare.yml"
    with:
      bench_master_cache_key: "benchmark-master"

  update-master-cache:
    if: ${{ github.ref_name == github.event.repository.default_branch }}
    runs-on: "ubuntu-latest"
    env:
      BENCH_MASTER_CACHE_KEY: "benchmark-master"
    container:
      image: "ghcr.io/tarantool/sdvg-ci:0.0.2"

    steps:
      - uses: "actions/checkout@v4"

      - name: "Create master benchmark"
        run: make test/performance > ./benchmark-master.txt

      - name: "Delete previous cache"
        continue-on-error: true
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete "${{ env.BENCH_MASTER_CACHE_KEY }}" --confirm
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Save benchmark-master.txt to cache"
        uses: "actions/cache/save@v4"
        with:
          key: "${{ env.BENCH_MASTER_CACHE_KEY }}"
          path: "benchmark-master.txt"